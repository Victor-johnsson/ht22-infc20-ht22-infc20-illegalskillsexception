<Page x:Class="ProjAssignment.Enclosure"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ProjAssignment"
      mc:Ignorable="d" 
      d:DesignHeight="495.595" d:DesignWidth="853.524"
      Title="Enclosure">
    <Page.Resources >
        <local:NameValidator x:Key="Ods"/>
        <local:IntValidator x:Key="iVal"/>
        <ControlTemplate x:Key="ValidationTemplate">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <Grid Width="12" Height="12">
                        <Ellipse Width="12" Height="12" 
            Fill="Red" HorizontalAlignment="Center" 
            VerticalAlignment="Center"
                     
                     ></Ellipse>
                        <TextBlock Foreground="White" FontWeight="Heavy" 
            FontSize="8" HorizontalAlignment="Center" 
            VerticalAlignment="Center" TextAlignment="Center"
                       ToolTip="{Binding ElementName=ErrorAdorner, 
                       Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                       >X</TextBlock>
                    </Grid>
                    <TextBlock Foreground="Red" FontWeight="12" Margin="2,0,0,0" 
                   Text="{Binding ElementName=ErrorAdorner, 
                   Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                   ></TextBlock>
                </StackPanel>
                <AdornedElementPlaceholder 
        x:Name="ErrorAdorner" ></AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>

        <Style x:Key="TextBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
              Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                              Path=(Validation.Errors)}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="23*"/>
        </Grid.RowDefinitions>
        <Canvas IsEnabled="True" Grid.RowSpan="2">
            <Canvas.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF629887" Offset="0"/>
                    <GradientStop Color="#FF10DEA0" Offset="0.743"/>
                    <GradientStop Color="#FF8BB5A8" Offset="0.067"/>
                </LinearGradientBrush>
            </Canvas.Background>
            <DataGrid x:Name="enclosureTable" Height="182" Width="323" AutoGenerateColumns="False" HorizontalAlignment="Left" VerticalAlignment="Center" Canvas.Top="70" Canvas.Left="46" RenderTransformOrigin="0.5,0.5" SelectionChanged="enclosureTable_SelectionChanged" IsEnabled="True" RowEditEnding="OnUpdate">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridTextColumn Header="Location" Binding="{Binding Location, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridTextColumn Header="Size" Binding="{Binding Size, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridTextColumn Header="Capacity" Binding="{Binding MaxAmountAnimals, UpdateSourceTrigger=PropertyChanged}" />
                </DataGrid.Columns>
            </DataGrid>
            <Button x:Name="addButton" Content="Add" Canvas.Left="584" Canvas.Top="237" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.118,0.86" Click="OnAddButton"/>
            <Button x:Name="deleteButton" Content="Delete" Canvas.Left="331" Canvas.Top="262" Click="OnDeleteButton"/>

            <xctk:IntegerUpDown Name="myUpDownControl" Canvas.Top="72" Canvas.Left="490" IsEnabled="True" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
                <xctk:IntegerUpDown.Text>

                    <Binding Source="{StaticResource iVal}" Path="Capacity" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <local:IntValidator Max="500" Min="1"/>
                        </Binding.ValidationRules>
                    </Binding>
                </xctk:IntegerUpDown.Text>
            </xctk:IntegerUpDown>
            <xctk:IntegerUpDown Name="sizeUpDownControl" Canvas.Top="210" Increment="10" Canvas.Left="490" IsEnabled="True" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
                <xctk:IntegerUpDown.Text>
                    <Binding Source="{StaticResource iVal}" Path="Size" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <local:IntValidator Max="1000" Min="1"/>
                        </Binding.ValidationRules>
                    </Binding>
                </xctk:IntegerUpDown.Text>
            </xctk:IntegerUpDown>

            <TextBox x:Name="nameTextBox" Canvas.Left="490" TextWrapping="NoWrap" Canvas.Top="116" Width="120" HorizontalAlignment="Left" VerticalAlignment="Center"
                     Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
                <TextBox.Text>
                    <Binding Source="{StaticResource Ods}" Path="Name" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:NameValidator></local:NameValidator>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox x:Name="locationTextBox" Canvas.Left="490" TextWrapping="NoWrap" Canvas.Top="161" Width="120" HorizontalAlignment="Center" VerticalAlignment="Top" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" >
                <TextBox.Text>
                    <Binding Source="{StaticResource Ods}" Path="Location" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:NameValidator></local:NameValidator>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label x:Name="Capacity" Content="Animal Capacity &#xA;" Canvas.Left="392" Canvas.Top="69" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26"/>
            <Label Content="Name" Canvas.Left="443" Canvas.Top="112" HorizontalAlignment="Left" VerticalAlignment="Top" IsEnabled="True"/>
            <Label Content="Location" Canvas.Left="430" Canvas.Top="157" />
            <Label Content="Size (sq m)" Canvas.Left="422" Canvas.Top="207" HorizontalAlignment="Left" VerticalAlignment="Top" />
        </Canvas>


    </Grid>
</Page>
